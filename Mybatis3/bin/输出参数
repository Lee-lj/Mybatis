输出参数resultType：                            使用resultMap时可以使用resultType+HashMap
       resultMap主要用来建立sql中的属性和java中的属性的联系关系
      
        1.简单类型（8个基本类型+ String）
           <select id="selectStudentCount" resultType="int">
	          select count(*) from students
	       </select>
        2.实体对象类型
                                                              就是自己当时定义的类，然后按这个类返回。一般情况用resultType
           <select id="selectStudentOrderByName" resultType="thirdclass.Student" >
		      select stuNo,stuName,stuClass,stuAge from students order by stuName desc
	       </select>
	                                  特殊情况用resultMap，指定输出:
	                                                实体类的属性和数据表的字段类型不一致(java:stuNo，sql:id),使用resultMap时可以使用resultType+HashMap来代替resultMap
	                                                实体类的属性和数据表的字段名不一致
	                    resultMap方式
	                            <!--  实体类的属性和数据表的字段名不一致，sql中的属性是No，Name -->
	                            <select id="selectStudentmap" resultMap="int" parameterType="id">
	                                select No,Name from students where id=#{id}
	                            </select>
	                            <resultMap type="thirdclass.Student" id=""selectStudentmap"">
	                                <!-- 指定类中的属性和表中的字段对应关系,id用主键，非主键用result -->
	                                <id property="stuNo" column="id"/>
	                                <result property="stuName" column="name"/>
	                            </resultMap>
	                    
	                    resultType+HashMap方式:
	                            <!-- resultType+HashMap方式  直接将表的字段名和类的属性建立联系No(表的属性) "stuNo"(类的属性)-->
	                            <select id="selectAllStudentWithHashMap" resultType="HashMap" parameterType="int">
	                                select No "stuNo",Name "stuName" from students where id=#{id}
	                            </select>          
	                                                      如果输出后某一个字段始终为0或null，可能是字段名的别名与属性名不一致
	                             
	                            
	    3.输出参数为实体对象类型的集合:   虽然输出为集合，但是resultType依然是元素类型，不加List，只在Mybatis接口中加入List<类>                                   
	        <select id="selectAll" resultType="thirdclass.Student">
	           select * from students
             </select>
	                     
	        	List<Student> selectAll();//查找全部
	    4.输出类型为HashMap类型:主要使用了别名，HashMap本身就是一个集合类型,但是hashMap只能存放一个学生的多个属性，而不是多个学生
	                                   输出 一个HashMap对象的多个属性:
	              <!-- 输出类型为HashMap,别名"No" "Name“ 别名作为Map的key -->
	                <select id="selectStudentOutHashMap" resultType="HashMap">
	                select stuNo "No" stuName "Name" from students where stuNo=226
	              </select>  
	                  
	           	HashMap<String,Object> selectStudentOutHashMap();//输出为hashmap类型
	           	
	           	
	           	
	           	but  使hashMap可以输出多个学生的多个属性:
	             		<!-- 使用hashmap输出多个学生的多个对象 -->
	             		<select id="selectAllStudentHashMap" resultType="HashMap">
	                		 select stuNo "No",stuName "Name" from students 
	             		</select>
	                     