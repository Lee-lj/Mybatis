1.查询某个年级的学生总数
输入：年级                            存储过程无论是什么值都要使用hashMap方式来传值
输出：这个年级的学生总数   通过hashmap的put方法输入参数，通过get方法获取输出参数   
   mysql中建立过程
       CREATE PROCEDURE querystudentByGrade(IN grade VARCHAR,OUT scount INT)
       BEGIN
       SELECT COUNT(1) INTO scount FROM students WHERE gradename=grade;
       END;
   personmapper.xml:
      <!-- 通过调用存储过程，实现查询 ,使用statementType="CALLABLE"指明调用的是存储过程  querystudentByGrade就是在mysql中定义的存储过程,
	     然后在querystudentByGrade()中写mysql中定义的参数及其在数据库中的数据类型,mode中指明是输入还是输出参数,输入参数在mybatis中用Map(hashmap)来传递,但是并没有返回值-->
	 <select id="querystudentByGrade" statementType="CALLABLE" parameterType="HashMap">
	 {
	     CALL querystudentByGrade( 
	                              #{grade,jdbcType=VARCHAR,mode=IN},
	                              #{scount,jdbcType=INTEGER,mode=OUT}
	                             )
	 }
	</select>
	
	mybatis接口:
		void querystudentByGrade(Map<String,Object> params);//调用存储过程，查找某个年级的总人数
	
	test:
	//调用存储过程，查找某个年级的总人数
		public static void querystudentByGrade() throws IOException {
			Reader reader = Resources.getResourceAsReader("config.xml");
			SqlSessionFactory sessionFactory=new SqlSessionFactoryBuilder().build(reader);
			SqlSession session=sessionFactory.openSession();
			//		String statement="thirdclass.PersonMapper.insertStudent";//statement注明要执行的sql ,用下面的StudentMapper来代替statement
			StudentMapper studentMapper=session.getMapper(StudentMapper.class);
			Map<String,Object> studentMap=new HashMap<>();//用map给存储过程输入参数
			
			studentMap.put("grade", "6");//给存储过程的输入grade输入6
			//返回值count不能直接调用int count=studentMapper.querystudentByGrade(studentMap);
			studentMapper.querystudentByGrade(studentMap);
			//获取存储过程的输出参数
			Object count = studentMap.get("scount");
			System.out.println(count);	
			session.close();
		}
2.根据学号删除学生